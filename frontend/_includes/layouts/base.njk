{% import "macros/social-link.njk" as social_macro %}
<!doctype html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="UTF-8" />
    <title>{{ title }} | {{ site.name }}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Brisbane's only social chess club" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;700&display=swap" />
    <link rel="stylesheet" href="{{ '/assets/styles/bundle.css' | url }}" />
    <link rel="icon" href="{{ '/assets/images/favicon.png' | url  }}" />
    <link rel="apple-touch-icon" href="{{ '/assets/images/apple-touch-icon.png' | url  }}" />
    <meta name="generator" content="{{ eleventy.generator }}" />
  </head>
  <body class="flex flex-col min-h-screen font-montserrat text-[var(--text-color)] bg-[var(--bg-color)] bg-[url('/assets/images/background.jpg')] bg-cover bg-center bg-fixed bg-blend-multiply transition-colors duration-500">
    <!-- Ribbon -->
    <a class="github-fork-ribbon right-top" href="https://github.com/brisbanesocialchess/brisbanesocialchess.github.io" data-ribbon="Fork me on GitHub" title="Fork me on GitHub">Fork me on GitHub</a>
    
    <!-- Background overlay -->
    <div class="flex-grow min-h-[calc(100vh-85px)] bg-[var(--bg-overlay)] flex justify-center p-12 max-md:p-4">
      <!-- Container -->
      <main class="relative max-w-[620px] w-[calc(100%-1rem)] bg-[var(--card-bg)] p-4 rounded-xl shadow-[0_0_50px_rgba(0,0,0,0.6)] flex flex-col gap-6">
        
        <!-- Theme Toggle Button -->
        <button
          class="theme-toggle absolute top-4 left-4 cursor-pointer transition-all duration-300 hover:scale-110"
          id="theme-toggle"
          title="Toggle light, dark or random theme"
          aria-label="Toggle theme"
        >
          <!-- Sun Icon -->
          <svg class="sun-icon w-6 h-6 text-yellow-500" aria-hidden="true" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
            <circle cx="12" cy="12" r="4" />
            <g stroke="currentColor" stroke-width="2" stroke-linecap="round">
              <line x1="12" y1="1" x2="12" y2="3" />
              <line x1="12" y1="21" x2="12" y2="23" />
              <line x1="4.22" y1="4.22" x2="5.64" y2="5.64" />
              <line x1="18.36" y1="18.36" x2="19.78" y2="19.78" />
              <line x1="1" y1="12" x2="3" y2="12" />
              <line x1="21" y1="12" x2="23" y2="12" />
              <line x1="4.22" y1="19.78" x2="5.64" y2="18.36" />
              <line x1="18.36" y1="5.64" x2="19.78" y2="4.22" />
            </g>
          </svg>
          
          <!-- Moon Icon -->
          <svg class="moon-icon w-6 h-6 text-blue-300 hidden" aria-hidden="true" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
            <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/>
          </svg>
          
          <!-- Star Icon -->
          <svg class="star-icon w-6 h-6 text-yellow-500 hidden" aria-hidden="true" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
          </svg>
        </button>

        <!-- Logo -->
        <div class="text-center">
          <a href="{{ '/' | url  }}">
            <img src="{{ '/assets/images/logo.jpg' | url }}" alt="Brisbane Social Chess Logo" class="w-45 mx-auto rounded-full" />
          </a>
          <h1 class="hidden md:block text-lg mt-5 uppercase tracking-[2px] font-bold">Brisbane Social Chess</h1>
          <p class="text-sm opacity-85 mt-5 md:mt-1">A place for casual chess, for fun and friendly people.</p>
        </div>

        <!-- Top Navigation -->
        <nav>
          <div class="flex items-center md:hidden">
            <button id="menu-toggle" type="button" aria-expanded="false" class="cursor-pointer">
              <svg class="w-8 h-8" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16"></path>
              </svg>
            </button>
            <span class="flex-1 text-center text-md font-bold">Brisbane Social Chess</span>
          </div>
          <div id="menu" class="flex-wrap hidden flex-col items-center justify-center space-y-2 mt-4 text-center text-sm md:flex md:flex-row md:space-y-0 md:space-x-2 md:mt-0">
            {% for link in navigation.navLinks -%}
            <a href="{{ link.url | url }}" class="block w-full py-2 rounded hover:bg-white/10 md:inline-block md:w-auto md:py-0 md:p-2 {% if page.url == link.url %}text-[#849eff] hover:text-[#849eff] font-bold{% endif %}">
              {{ link.text }}
            </a>
            {%- endfor %}
          </div>
        </nav>

        <!-- Content -->
        {{ content | safe }}
      </main>
    </div>

    <!-- Social Bar -->
    <div class="fixed bottom-0 left-0 w-full md:w-auto md:top-1/2 md:-translate-y-1/2 md:left-4 flex md:flex-col gap-2">
      {% for social in site.socials %}
        {% if social.in_nav %}
          {{ social_macro.social_link(
            social,
            "flex-1 md:flex-none bg-gradient-to-br " ~ social.gradient ~ " rounded-full p-2 flex items-center justify-center"
          ) }}
        {% endif %}
      {% endfor %}
    </div>

    <!-- Footer -->
    <footer class="h-[85px] text-center p-8 pb-20 md:pb-8 text-sm flex flex-col items-center justify-center gap-3">
      <div class="hidden md:flex space-x-4">
        {% for social in site.socials %}
          {{ social_macro.social_link(social, "hover:opacity-80 transition") }}
        {% endfor %}
      </div>
      <p>&copy; <span id="year"></span> Brisbane Social Chess. All rights reserved.</p>
    </footer>

    {% if captcha %}
      <script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>
    {% endif %}

    <!-- Theme Toggle Script -->
    <script>
      const toggleBtn = document.getElementById("theme-toggle");
      const sunIcon = toggleBtn.querySelector(".sun-icon");
      const moonIcon = toggleBtn.querySelector(".moon-icon");
      const starIcon = toggleBtn.querySelector(".star-icon");

      const themes = ["light", "dark", "random"];
      let currentTheme = 0;

      // Add CSS for smooth transitions and animations
      const style = document.createElement('style');
      style.textContent = `
        :root {
          --text-color: #000000;
          --bg-color: transparent;
          --card-bg: rgba(255, 255, 255, 0.6);
          --bg-overlay: rgba(255, 255, 255, 0.2);
        }
        
        .dark {
          --text-color: #ffffff;
          --bg-color: transparent;
          --card-bg: rgba(0, 0, 0, 0.8);
          --bg-overlay: rgba(0, 0, 0, 0.4);
        }
        
        .theme-toggle {
          transition: all 0.3s ease;
        }
        
        .theme-toggle:hover {
          transform: scale(1.1);
        }
        
        .sun-icon, .moon-icon, .star-icon {
          transition: all 0.4s ease;
        }
        
        .star-icon:not(.hidden) {
          animation: sparkle 3s ease-in-out infinite;
        }
        
        @keyframes sparkle {
          0%, 100% { transform: rotate(0deg) scale(1); opacity: 1; }
          25% { transform: rotate(90deg) scale(1.1); opacity: 0.8; }
          50% { transform: rotate(180deg) scale(1); opacity: 1; }
          75% { transform: rotate(270deg) scale(1.1); opacity: 0.8; }
        }
        
        /* Theme specific background blend modes */
        .theme-light { background-blend-mode: normal !important; }
        .theme-dark { background-blend-mode: multiply !important; }
        .theme-random { background-blend-mode: overlay !important; }
      `;
      document.head.appendChild(style);

      // Random pastel colors like in React code
      function randomPastel() {
        const r = Math.floor((Math.random() * 127) + 128);
        const g = Math.floor((Math.random() * 127) + 128);
        const b = Math.floor((Math.random() * 127) + 128);
        return `rgb(${r},${g},${b})`;
      }

      function updateTheme() {
        const theme = themes[currentTheme];
        
        // Remove existing theme classes
        document.body.classList.remove('theme-light', 'theme-dark', 'theme-random');
        document.documentElement.classList.remove('dark');
        document.body.classList.add(`theme-${theme}`);

        // Always hide all icons first
        sunIcon.classList.add('hidden');
        moonIcon.classList.add('hidden');
        starIcon.classList.add('hidden');

        if (theme === "light") {
          // Light theme - show SUN icon only
          sunIcon.classList.remove('hidden');
          // Remove custom CSS properties to use default :root values
          document.documentElement.style.removeProperty("--text-color");
          document.documentElement.style.removeProperty("--bg-color");
          document.documentElement.style.removeProperty("--card-bg");
          document.documentElement.style.removeProperty("--bg-overlay");
          
        } else if (theme === "dark") {
          // Dark theme - show MOON icon only and add dark class
          moonIcon.classList.remove('hidden');
          document.documentElement.classList.add('dark');
          
        } else if (theme === "random") {
          // Random theme - show STAR icon only
          starIcon.classList.remove('hidden');
          const randomColor = randomPastel();
          document.documentElement.style.setProperty("--text-color", "#000000");
          document.documentElement.style.setProperty("--bg-color", randomColor);
          document.documentElement.style.setProperty("--card-bg", "rgba(255, 255, 255, 0.6)");
          document.documentElement.style.setProperty("--bg-overlay", "rgba(255, 255, 255, 0.2)");
        }

        const nextTheme = themes[(currentTheme + 1) % themes.length];
        toggleBtn.title = `Current theme: ${theme}. Click to switch to ${nextTheme}`;
      }

      toggleBtn.addEventListener("click", () => {
        currentTheme = (currentTheme + 1) % themes.length;
        updateTheme();
      });

      // Initialize theme and year
      updateTheme();
      document.getElementById("year").textContent = new Date().getFullYear();
    </script>

    <script type="text/javascript" src="{{ '/assets/scripts/bundle.js' | url  }}"></script>
  </body>
</html>