<div
    id="alert-container" class="fixed top-4 right-4 z-50 space-y-2">
</div>
<script>
    window.AlertSystem = {
        container: null,
        init() {
            this.container = document.getElementById('alert-container');
            if (!this.container) {
                this.container = document.createElement('div');
                this.container.id = 'alert-container';
                this.container.className = 'fixed top-4 right-4 z-50 space-y-2';
                document.body.appendChild(this.container);
            }
        },
        show(options = {}) {
            if (!this.container) {
                this.init();
            }

            const {
                message = '',
                type = 'info',
                duration = 50000000,
                dismissible = true
            } = options;

            const typeConfig = {
                success: {
                    bg: 'bg-green-700',
                    border: 'border-green-800',
                    text: 'text-white',
                },
                error: {
                    bg: 'bg-red-500',
                    border: 'border-red-700',
                    text: 'text-white',
                },
                warning: {
                    bg: 'bg-orange-100',
                    border: 'border-orange-500',
                    text: 'text-orange-700'
                },
                info: {
                    bg: 'bg-indigo-900',
                    border: 'border-indigo-800',
                    text: 'text-white',
                }
            };
            const config = typeConfig[type] || typeConfig.info;
            const alertId = 'alert-' + Date.now() + '-' + Math.random().toString(36).substr(2, 9);

            const alertHTML = `
				<div id="${alertId}" class="w-lg w-full ${config.bg} border ${config.border} ${config.text} px-4 py-3 rounded relative shadow-lg transform transition-all duration-300 ease-in-out translate-x-full opacity-0" role="alert">
					<span class="block pr-2">${message}</span>
					${dismissible ? `
						<span class="absolute top-2 right-2 cursor-pointer" onclick="AlertSystem.dismiss('${alertId}')">
							<svg class="fill-current h-6 w-6 ${config.text}" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><title>Close</title><path d="M18.3 5.71a1 1 0 0 0-1.41 0L12 10.59 7.11 5.7A1 1 0 0 0 5.7 7.11L10.59 12l-4.89 4.89a1 1 0 1 0 1.41 1.41L12 13.41l4.89 4.89a1 1 0 0 0 1.41-1.41L13.41 12l4.89-4.89a1 1 0 0 0 0-1.4z"/></svg>
						</span>
					` : ''}
				</div>
			`;

            this.container.insertAdjacentHTML('beforeend', alertHTML);

            const alertElement = document.getElementById(alertId);

            setTimeout(() => {
                alertElement.classList.remove('translate-x-full', 'opacity-0');
                alertElement.classList.add('translate-x-0', 'opacity-100');
            }, 10);

            if (duration > 0) {
                setTimeout(() => {
                    this.dismiss(alertId);
                }, duration);
            }
            return alertId;
        },

        dismiss(alertId) {
            const alertElement = document.getElementById(alertId);
            if (alertElement) {
                alertElement.classList.remove('translate-x-0', 'opacity-100');
                alertElement.classList.add('translate-x-full', 'opacity-0');
                setTimeout(() => {
                    if (alertElement.parentNode) {
                        alertElement.parentNode.removeChild(alertElement);
                    }
                }, 300);
            }
        },
        dismissAll() {
            const alerts = this.container.querySelectorAll('[id^="alert-"]');
            alerts.forEach(alert => {
                const alertId = alert.id;
                this.dismiss(alertId);
            });
        }
    };

    function formatMessage(message) {
        if (Array.isArray(message)) {
            if (message.length === 1) {
                return `Please fix the error: ${message[0]}`;
            } else {
                return `Please fix the following:<br>- ${message.join('<br>- ')}`;
            }
        }
        return message;
    }

    window.showSuccess = (message, options = {}) => {
        return window.AlertSystem.show({
            message: formatMessage(message),
            type: 'success',
            ...options
        });
    };
    window.showError = (message, options = {}) => {
        return window.AlertSystem.show({
            message: formatMessage(message),
            type: 'error',
            ...options
        });
    };
    window.showWarning = (message, options = {formatMessage}) => {
        return window.AlertSystem.show({
            message: formatMessage ? formatMessage(message) : message,
            type: 'warning',
            ...options
        });
    };
    window.showInfo = (message, options = {}) => {
        return window.AlertSystem.show({
            message: formatMessage(message),
            type: 'info',
            ...options
        });
    };
</script>
